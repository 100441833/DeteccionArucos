import cv2
import numpy as np
import matplotlib.pyplot as plt
import csv
import pandas as pd

!pip install opencv-contrib-python

import cv2.aruco as aruco

video_path = '/content/Prueba_2y5Vrecortado.mp4'
cap = cv2.VideoCapture(video_path)
ret, reference_frame = cap.read()
if not ret:
    print("No se pudo leer el video.")
    cap.release()
    exit()

def detect_aruco_positions(frame):
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    aruco_dict = aruco.getPredefinedDictionary(aruco.DICT_6X6_250)
    aruco_params = aruco.DetectorParameters()
    corners, ids, _ = aruco.detectMarkers(gray, aruco_dict, parameters=aruco_params)

    aruco_positions = {}
    if ids is not None:
        for i in range(len(ids)):
            aruco_positions[ids[i][0]] = corners[i][0]

    return aruco_positions

reference_positions = detect_aruco_positions(reference_frame)

movements = []
frame_idx = 0

while True:
    ret, frame = cap.read()
    if not ret:
        break

    current_positions = detect_aruco_positions(frame)
    frame_data = {'frame': frame_idx}

    for aruco_id, ref_pos in reference_positions.items():
        if aruco_id in current_positions:
            cur_pos = current_positions[aruco_id]
            diff = np.linalg.norm(cur_pos - ref_pos)
            frame_data[aruco_id] = diff
        else:
            frame_data[aruco_id] = None

    movements.append(frame_data)
    frame_idx += 1

cap.release()

output_path = 'movimientos.txt'

with open(output_path, 'w', newline='') as csvfile:
    fieldnames = ['frame'] + list(reference_positions.keys())
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    
    writer.writeheader()
    for data in movements:
        writer.writerow(data)

data = pd.read_csv(output_path)

plt.figure(figsize=(10, 6))
for aruco_id in reference_positions.keys():
    plt.plot(data['frame'], data[str(aruco_id)], label=f'Aruco {aruco_id}')

plt.xlabel('Fotograma')
plt.ylabel('Diferencia de p√≠xeles')
plt.legend()
plt.title('Movimiento de los arucos a lo largo del video')
plt.show()
